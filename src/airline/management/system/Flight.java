/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package airline.management.system;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author AL MUBDIE
 */
public class Flight extends javax.swing.JFrame {

    private String sourcePage;
    String jdbcUrl = "jdbc:mysql://localhost:3306/airline_management_system";
    String user = "root";
    String dbpassword = "";
    
    /**
     * Creates new form Flight
     */
    public Flight(String sourcePage) {
        initComponents();
        this.sourcePage = sourcePage;
        tpe.setEnabled(false);
        tpb.setEnabled(false);
        tpf.setEnabled(false);
        table_update();
    }
    
    Connection con;
    PreparedStatement pst;
    
    public void table_update()
    {
        int c;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection(jdbcUrl, user, dbpassword);
            
            pst = con.prepareStatement("select * from flight");
            ResultSet Rs = pst.executeQuery();
            ResultSetMetaData rd = Rs.getMetaData();
            c = rd.getColumnCount();
            DefaultTableModel df = (DefaultTableModel)jTable1.getModel();
            df.setRowCount(0);     
            
            while(Rs.next())
            {
                Vector v2 = new Vector();
                
                for (int i=1;i<=c;i++)
                {
                    v2.add(Rs.getString("No"));
                    v2.add(Rs.getString("Airline"));
                    v2.add(Rs.getString("Flight_No"));
                    v2.add(Rs.getString("No_of_Seats"));                
                    v2.add(Rs.getString("Seat_Type"));
                    v2.add(Rs.getString("Source"));
                    v2.add(Rs.getString("Departure_Date"));
                    v2.add(Rs.getString("Departure_Time"));
                    v2.add(Rs.getString("Destination"));
                    v2.add(Rs.getString("Arrival_Date"));
                    v2.add(Rs.getString("Arrival_Time"));
                    v2.add(Rs.getString("Ticket_Price"));
                }
               df.addRow(v2);
            }
            con.close(); 
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Flight.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Flight.class.getName()).log(Level.SEVERE, null, ex);
        }   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        F_no = new javax.swing.JTextField();
        destinybox = new javax.swing.JComboBox<>();
        sourcebox = new javax.swing.JComboBox<>();
        seats = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        delete = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        add = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        airline = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        Ebox = new javax.swing.JCheckBox();
        Bbox = new javax.swing.JCheckBox();
        Fbox = new javax.swing.JCheckBox();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        tpe = new javax.swing.JTextField();
        tpb = new javax.swing.JTextField();
        tpf = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        Dtime = new javax.swing.JTextField();
        Atime = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 153));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 0, 95));

        jLabel2.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Flight No");

        jLabel3.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Destination");

        jLabel4.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Source");

        jLabel5.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Departure Date");

        jLabel6.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("No. of Seats");

        F_no.setBackground(new java.awt.Color(255, 255, 153));

        destinybox.setBackground(new java.awt.Color(255, 255, 153));
        destinybox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chennai - India", "Colombo - Sri Lanka", "Delhi - India", "Bangalore - India", "Sydney - Australia", "Melbourne - Australia", "Hong Kong - China", "Tokyo - China", "Osaka - China", "Lahore - Pakistan", "Karachi - Pakistan", "Doha - Qatar", "Dubai - UAE", "Singapore - Singapore", "Riyadh - Saudhi Arabia", "Kuala Lamoure - Malaysia", "Bangkok - Thailand", "Male - Maldives", "Dhaka - Bangladesh", "Auckland - New Zealand" }));
        destinybox.setSelectedIndex(-1);

        sourcebox.setBackground(new java.awt.Color(255, 255, 153));
        sourcebox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Colombo - Sri Lanka", "Chennai - India", "Delhi - India", "Bangalore - India", "Sydney - Australia", "Melbourne - Australia", "Hong Kong - China", "Tokyo - China", "Osaka - China", "Lahore - Pakistan", "Karachi - Pakistan", "Doha - Qatar", "Dubai - UAE", "Singapore - Singapore", "Riyadh - Saudhi Arabia", "Kuala Lamoure - Malaysia", "Bangkok - Thailand", "Male - Maldives", "Dhaka - Bangladesh", "Auckland - New Zealand" }));
        sourcebox.setSelectedIndex(-1);
        sourcebox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sourceboxActionPerformed(evt);
            }
        });

        seats.setBackground(new java.awt.Color(255, 255, 153));

        jDateChooser1.setBackground(new java.awt.Color(255, 255, 153));

        delete.setBackground(new java.awt.Color(153, 0, 0));
        delete.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        delete.setText("DELETE");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 102, 102));
        jButton3.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        jButton3.setText("BACK");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        add.setBackground(new java.awt.Color(0, 102, 0));
        add.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        add.setText("ADD");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        edit.setBackground(new java.awt.Color(0, 102, 0));
        edit.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        edit.setText("EDIT");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Air Line", "Flight No", "No of Seats", "Seat Type", "Source", "Departure Date", "Departure Time", "Destination", "Arrival Date", "Arrival Time", "Ticket Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel7.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Air Line");

        airline.setBackground(new java.awt.Color(255, 255, 153));

        jLabel8.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Seat Type");

        jLabel9.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Arrival Date");

        // Add ActionListener to Ebox
        Ebox.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (Ebox.isSelected()) {
                    tpe.setEnabled(true); // Enable the text field
                } else {
                    tpe.setEnabled(false); // Disable the text field
                }
            }
        });
        Ebox.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        Ebox.setForeground(new java.awt.Color(255, 255, 255));
        Ebox.setText("Economy Class");

        // Add ActionListener to Ebox
        Bbox.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (Bbox.isSelected()) {
                    tpb.setEnabled(true); // Enable the text field
                } else {
                    tpb.setEnabled(false); // Disable the text field
                }
            }
        });
        Bbox.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        Bbox.setForeground(new java.awt.Color(255, 255, 255));
        Bbox.setText("Business Class");

        // Add ActionListener to Ebox
        Fbox.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (Fbox.isSelected()) {
                    tpf.setEnabled(true); // Enable the text field
                } else {
                    tpf.setEnabled(false); // Disable the text field
                }
            }
        });
        Fbox.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        Fbox.setForeground(new java.awt.Color(255, 255, 255));
        Fbox.setText("First Class");

        jDateChooser2.setBackground(new java.awt.Color(255, 255, 153));

        jLabel10.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Departure Time");

        jLabel11.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Arrival Time");

        jLabel12.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Ticket Price :");

        tpe.setBackground(new java.awt.Color(255, 255, 153));
        tpe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tpeActionPerformed(evt);
            }
        });

        tpb.setBackground(new java.awt.Color(255, 255, 153));

        tpf.setBackground(new java.awt.Color(255, 255, 153));
        tpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tpfActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Economy Class");

        jLabel14.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Business Class");

        jLabel15.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("First Class");

        Dtime.setBackground(new java.awt.Color(255, 255, 153));

        Atime.setBackground(new java.awt.Color(255, 255, 153));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Ebox, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                            .addComponent(seats, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(F_no, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(airline, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Bbox, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                            .addComponent(Fbox, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE))))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Dtime, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                            .addComponent(sourcebox, 0, 158, Short.MAX_VALUE)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Atime))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(destinybox, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(add)
                                        .addGap(40, 40, 40))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel14)
                                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(56, 56, 56)))))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(edit)
                                .addGap(40, 40, 40)
                                .addComponent(delete)
                                .addGap(40, 40, 40)
                                .addComponent(jButton3))
                            .addComponent(tpb, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tpe, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tpf, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 20, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {Bbox, Ebox, Fbox});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {Atime, Dtime, F_no, airline, destinybox, jDateChooser1, jDateChooser2, seats, sourcebox, tpb, tpe, tpf});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {add, delete, edit, jButton3});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel3)
                            .addComponent(airline, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sourcebox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(destinybox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(F_no)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2))
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(seats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(Dtime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Atime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Ebox)
                                .addComponent(jLabel12)
                                .addComponent(jLabel13)
                                .addComponent(tpe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel8)))
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Bbox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Fbox))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tpb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(tpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add)
                    .addComponent(edit)
                    .addComponent(delete)
                    .addComponent(jButton3))
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {Bbox, Ebox, Fbox});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {Atime, Dtime, F_no, airline, destinybox, jDateChooser1, jDateChooser2, seats, sourcebox, tpb, tpe, tpf});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {add, delete, edit, jButton3});

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, 910, -1));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0, 95));

        jLabel1.setFont(new java.awt.Font("Gill Sans Ultra Bold Condensed", 1, 18)); // NOI18N
        jLabel1.setText("FLIGHT MANAGEMENT");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(376, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(337, 337, 337))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 910, 40));

        jLabel16.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Flight.jpg"))); // NOI18N
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1070, 580));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // For back Button
        this.dispose(); // Close the current page
    
        if (sourcePage.equals("MainMenuAdmin")) {
            MainMenuAdmin adminPage = new MainMenuAdmin();
            adminPage.setVisible(true);
        } else if (sourcePage.equals("MainMenuStaff")) {
            MainMenuStaff staffPage = new MainMenuStaff();
            staffPage.setVisible(true);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void sourceboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sourceboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sourceboxActionPerformed

    private void tpeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tpeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tpeActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        //Add Button...     
        String Fairline = airline.getText();
        String Fno = F_no.getText();        
        String Fseats = seats.getText();
        // Get the state of each checkbox
        boolean economyChecked = Ebox.isSelected();
        boolean businessChecked = Bbox.isSelected();
        boolean firstClassChecked = Fbox.isSelected();

        String ETicprice = tpe.getText();
        String BTicprice = tpb.getText();
        String FTicprice = tpf.getText();
        
        // Initialize a StringBuilder to build the combined data string
        StringBuilder combinedSeatTypeData = new StringBuilder();
        StringBuilder combinedPriceData = new StringBuilder();

        // Add selected seat types to the combined data string
        if (economyChecked) {
            combinedSeatTypeData.append("Economy Class");
            combinedPriceData.append(ETicprice);
        }

        if (businessChecked) {
            if (combinedSeatTypeData.length() > 0) {
                combinedSeatTypeData.append(", ");
                combinedPriceData.append(", ");
            }
                combinedSeatTypeData.append("Business Class");
                combinedPriceData.append(BTicprice);
        }

        if (firstClassChecked) {
            if (combinedSeatTypeData.length() > 0) {
                combinedSeatTypeData.append(", ");
                combinedPriceData.append(", ");
            }
            combinedSeatTypeData.append("First Class");
            combinedPriceData.append(FTicprice);
        }

        String Fsource = sourcebox.getSelectedItem() != null ? sourcebox.getSelectedItem().toString() : null;
        //departure date declared
        String date = jDateChooser1.getDate() != null ? new SimpleDateFormat ("yyyy/MM/dd").format(jDateChooser1.getDate()) : null;
        String Dptime = Dtime.getText();
        String Fsource2 = destinybox.getSelectedItem() != null ? destinybox.getSelectedItem().toString() : null;
        //arrival date declared
        String date2 = jDateChooser2.getDate() != null ? new SimpleDateFormat ("yyyy/MM/dd").format(jDateChooser2.getDate()) : null;
        String arvltime = Atime.getText();
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection(jdbcUrl, user, dbpassword);
            
            if (Fairline.equals("")||Fno.equals("")||Fseats.equals("")||Fsource == null ||date == null ||Dptime.isEmpty()||Fsource2 == null||date2 == null||arvltime.equals("")||(Ebox.isSelected() && ETicprice.isEmpty()) ||(Bbox.isSelected() && BTicprice.isEmpty()) || (Fbox.isSelected() && FTicprice.isEmpty())) 
            {
                JOptionPane.showMessageDialog(this, "Some Fields are empty or not selected");   
            }
            else
            {
                pst = con.prepareStatement("insert into flight(Airline, Flight_No, No_of_Seats, Seat_Type, Source, Departure_Date, Departure_Time, Destination, Arrival_Date, Arrival_Time, Ticket_Price) values (?,?,?,?,?,?,?,?,?,?,?)");
                pst.setString(1, Fairline);
                pst.setString(2, Fno);
                pst.setString(3, Fseats);
                // Set the combined seat type data
                pst.setString(4, combinedSeatTypeData.toString());
                pst.setString(5, Fsource);
                pst.setString(6, date);
                pst.setString(7, Dptime);
                pst.setString(8, Fsource2);
                pst.setString(9, date2);
                pst.setString(10, arvltime);
                pst.setString(11, combinedPriceData.toString());
                
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this,"Flight Added.");
            
                airline.setText("");            
                F_no.setText("");
                seats.setText("");
                Ebox.setSelected(false);
                Bbox.setSelected(false);
                Fbox.setSelected(false);
                sourcebox.setSelectedIndex(-1);
                jDateChooser1.setDate(null);
                Dtime.setText("");
                destinybox.setSelectedIndex(-1);
                jDateChooser2.setDate(null);
                Atime.setText("");
                tpe.setText("");            
                tpb.setText("");
                tpf.setText("");
                
                airline.requestFocus();
                table_update();
            }
            con.close(); 
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Flight.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Flight.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_addActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        DefaultTableModel d1 = (DefaultTableModel)jTable1.getModel();
        int selectindex = jTable1.getSelectedRow();
           
        // Check if a valid row is selected
        if (selectindex >= 0) {
            
            airline.setText(d1.getValueAt(selectindex, 1).toString());            
            F_no.setText(d1.getValueAt(selectindex, 2).toString());
            seats.setText(d1.getValueAt(selectindex, 3).toString());
            // Get the seat type data from the selected row
            String seatTypeData = d1.getValueAt(selectindex, 4).toString(); // Assuming seat type data is in column 4
            sourcebox.setSelectedItem(d1.getValueAt(selectindex, 5).toString());
            // Get the date value from the selected row
            String departureDateStr = d1.getValueAt(selectindex, 6).toString(); // Assuming the departure date is in the 6th column
            Dtime.setText(d1.getValueAt(selectindex, 7).toString());
            destinybox.setSelectedItem(d1.getValueAt(selectindex, 8).toString());
            String arrivalDateStr = d1.getValueAt(selectindex, 9).toString(); // Assuming the arrival date is in the 9th column
            Atime.setText(d1.getValueAt(selectindex, 10).toString());
            String priceValues = d1.getValueAt(selectindex, 11).toString(); // Assuming the price values are in the 14th column
            
            // Split the seat type data
            String[] seatTypes = seatTypeData.split(", ");
            String[] priceValueArray = priceValues.split(", "); // Split the price values

            // Set checkbox states based on the seat types
            Ebox.setSelected(false);
            Bbox.setSelected(false);
            Fbox.setSelected(false);

            for (String seatType : seatTypes) {
                if (seatType.equals("Economy Class")) {
                    Ebox.setSelected(true);
                } else if (seatType.equals("Business Class")) {
                    Bbox.setSelected(true);
                } else if (seatType.equals("First Class")) {
                    Fbox.setSelected(true);
                }
            }
            
            // Disable/Enable price fields based on checkbox selection
            tpe.setEnabled(Ebox.isSelected());
            tpb.setEnabled(Bbox.isSelected());
            tpf.setEnabled(Fbox.isSelected());

            // Retrieve and set price values
            if (Ebox.isSelected()) {
                tpe.setText(priceValueArray[0]); // First value in the array
            }
            if (Bbox.isSelected()) {
                tpb.setText(priceValueArray[1]); // 2nd value in the array
            }
            if (Fbox.isSelected()) {
                tpf.setText(priceValueArray[2]); // 3rd value in the array
            }
            
            try {
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
                Date departureDate = dateFormat.parse(departureDateStr);
                Date arrivalDate = dateFormat.parse(arrivalDateStr);

                // Use the parsed dates as needed
                jDateChooser1.setDate(departureDate);
                jDateChooser2.setDate(arrivalDate);
                
            } catch (ParseException ex) {
                Logger.getLogger(Flight.class.getName()).log(Level.SEVERE, null, ex);
            }               
        } 
    }//GEN-LAST:event_jTable1MouseClicked

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        //Delete Button
        DefaultTableModel d1 = (DefaultTableModel)jTable1.getModel();
        int selectIndex = jTable1.getSelectedRow();
        
        try {
 
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection(jdbcUrl, user, dbpassword);
            
            String Fairline = d1.getValueAt(selectIndex, 1).toString(); 
            int dialogResult = JOptionPane.showConfirmDialog(this," Do you want to delete?", "Warning!",JOptionPane.YES_NO_OPTION );
        
            if (dialogResult == JOptionPane.YES_OPTION)
            {
                pst = con.prepareStatement("delete from flight where Airline = ?");
                pst.setString(1, Fairline);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this,"Flight Deleted.");
                
                airline.setText("");            
                F_no.setText("");
                seats.setText("");
                Ebox.setSelected(false);
                Bbox.setSelected(false);
                Fbox.setSelected(false);
                sourcebox.setSelectedIndex(-1);
                jDateChooser1.setDate(null);
                Dtime.setText("");
                destinybox.setSelectedIndex(-1);
                jDateChooser2.setDate(null);
                Atime.setText("");
                tpe.setText("");            
                tpb.setText("");
                tpf.setText("");
                
                airline.requestFocus();
                table_update();
                
            }
            con.close(); 
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Flight.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Flight.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        //Edit Button
        DefaultTableModel d1 = (DefaultTableModel)jTable1.getModel();
        int selectIndex = jTable1.getSelectedRow();
        
        String Fairline = airline.getText();
        String Fno = F_no.getText();        
        String Fseats = seats.getText();
        // Get the state of each checkbox
        boolean economyChecked = Ebox.isSelected();
        boolean businessChecked = Bbox.isSelected();
        boolean firstClassChecked = Fbox.isSelected();

        String ETicprice = tpe.getText();
        String BTicprice = tpb.getText();
        String FTicprice = tpf.getText();
        
        // Initialize a StringBuilder to build the combined data string
        StringBuilder combinedSeatTypeData = new StringBuilder();
        StringBuilder combinedPriceData = new StringBuilder();

        // Add selected seat types to the combined data string
        if (economyChecked) {
            combinedSeatTypeData.append("Economy Class");
            combinedPriceData.append(ETicprice);
        }

        if (businessChecked) {
            if (combinedSeatTypeData.length() > 0) {
                combinedSeatTypeData.append(", ");
                combinedPriceData.append(", ");
            }
                combinedSeatTypeData.append("Business Class");
                combinedPriceData.append(BTicprice);
        }

        if (firstClassChecked) {
            if (combinedSeatTypeData.length() > 0) {
                combinedSeatTypeData.append(", ");
                combinedPriceData.append(", ");
            }
            combinedSeatTypeData.append("First Class");
            combinedPriceData.append(FTicprice);
        }

        String Fsource = sourcebox.getSelectedItem() != null ? sourcebox.getSelectedItem().toString() : null;
        //departure date declared
        String date = jDateChooser1.getDate() != null ? new SimpleDateFormat ("yyyy/MM/dd").format(jDateChooser1.getDate()) : null;
        String Dptime = Dtime.getText();
        String Fsource2 = destinybox.getSelectedItem() != null ? destinybox.getSelectedItem().toString() : null;
        //arrival date declared
        String date2 = jDateChooser2.getDate() != null ? new SimpleDateFormat ("yyyy/MM/dd").format(jDateChooser2.getDate()) : null;
        String arvltime = Atime.getText();
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection(jdbcUrl, user, dbpassword);
            
            if (Fairline.equals("")||Fno.equals("")||Fseats.equals("")||Fsource == null ||date == null ||Dptime.isEmpty()||Fsource2 == null||date2 == null||arvltime.equals("")||(Ebox.isSelected() && ETicprice.isEmpty()) ||(Bbox.isSelected() && BTicprice.isEmpty()) || (Fbox.isSelected() && FTicprice.isEmpty())) 
            {
                JOptionPane.showMessageDialog(this, "Some Fields are empty or not selected");   
            }
            else
            {
                pst = con.prepareStatement("update flight set Airline = ?, No_of_Seats = ?, Seat_Type = ?, Source = ?, Departure_Date = ?, Departure_Time = ?, Destination = ?, Arrival_Date = ?, Arrival_Time = ?, Ticket_Price = ? where Flight_No = ?");
                pst.setString(1, Fairline);
                pst.setString(2, Fseats);
                // Set the combined seat type data
                pst.setString(3, combinedSeatTypeData.toString());
                pst.setString(4, Fsource);
                pst.setString(5, date);
                pst.setString(6, Dptime);
                pst.setString(7, Fsource2);
                pst.setString(8, date2);
                pst.setString(9, arvltime);
                pst.setString(10, combinedPriceData.toString());
                pst.setString(11, Fno);
                
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this,"Record Edited.");
            
                airline.setText("");            
                F_no.setText("");
                seats.setText("");
                Ebox.setSelected(false);
                Bbox.setSelected(false);
                Fbox.setSelected(false);
                sourcebox.setSelectedIndex(-1);
                jDateChooser1.setDate(null);
                Dtime.setText("");
                destinybox.setSelectedIndex(-1);
                jDateChooser2.setDate(null);
                Atime.setText("");
                tpe.setText("");            
                tpb.setText("");
                tpf.setText("");
                
                airline.requestFocus();
                table_update();
            }
            con.close(); 
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Flight.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Flight.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_editActionPerformed

    private void tpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tpfActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Flight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Flight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Flight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Flight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Flight("MainMenuAdmin").setVisible(true);
                new Flight("MainMenuStaff").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Atime;
    private javax.swing.JCheckBox Bbox;
    private javax.swing.JTextField Dtime;
    private javax.swing.JCheckBox Ebox;
    private javax.swing.JTextField F_no;
    private javax.swing.JCheckBox Fbox;
    private javax.swing.JButton add;
    private javax.swing.JTextField airline;
    private javax.swing.JButton delete;
    private javax.swing.JComboBox<String> destinybox;
    private javax.swing.JButton edit;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField seats;
    private javax.swing.JComboBox<String> sourcebox;
    private javax.swing.JTextField tpb;
    private javax.swing.JTextField tpe;
    private javax.swing.JTextField tpf;
    // End of variables declaration//GEN-END:variables
}
